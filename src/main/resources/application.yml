### This is the main way to configure the application (other than annotations).
### This file is in Yaml format but you can also configure spring boot using the traditional
### Java properties file format. 
#
#spring.jmx:
#   enabled: false

spring.datasource:
    driverClassName: org.h2.Driver
    url: jdbc:h2:file:~/bootexample

server:
  port: 8090

#todo: make sure to always enable security in production
security:
  basic:
    enabled: false

#management endpoints on a separate port
management:
  port: 8091
  security:
    enabled: false # management port is internal only. no need to secure it.

#default project info followed by actual injected pom-specified values.
project:
  name: spring-boot-rest-example
  version: 0.1
  description: boot-example default description
info:
  build:
    artifact: ${project.artifactId}
    name: ${project.name}
    description: ${project.description}
    version: ${project.version}

hotel.service:
  name: 'default profile:'
---
spring:
  profiles: test
  h2:
    console:
      enabled: true

spring.jpa:
    hibernate.ddl-auto: update

hotel.service:
  name: 'test profile:'
  
logging:
  level:
    org.springframework.web: ERROR
    org.hibernate: INFO
    com.mkyong: DEBUG
  pattern:
      console: "%d{HH:mm:ss.S} [%thread] %-5level%logger{100} - %msg%n"
      file: "%d{HH:mm:ss.S} [%thread] %-5level %logger{100}- %msg%n"
  file: boot_example.log

#org.hibernate: INFO

 